its running
args 1: 10
args 2: 80
test2.bc
test2.bc.callgraph
start
uses = 4
cn:A
line:  CS<0x557957cda980> calls function 'printf'
inside while contains CS
nll: 
curLine:  CS<0x557957cda980> calls function 'printf'
nextLine: Call graph node for function: 'B'<<0x557957c74080>>  #uses=6
start
uses = 5
cn:B
line:  CS<0x557957cda4f0> calls function 'printf'
inside while contains CS
nll: 
curLine:  CS<0x557957cda4f0> calls function 'printf'
nextLine: Call graph node for function: 'C'<<0x557957c74010>>  #uses=3
start
uses = 2
cn:C
line:  CS<0x557957cdabf0> calls function 'printf'
inside while contains CS
nll: 
curLine:  CS<0x557957cdabf0> calls function 'printf'
nextLine: Call graph node for function: 'D'<<0x557957ce53d0>>  #uses=6
start
uses = 5
cn:D
line:  CS<0x557957cda710> calls function 'printf'
inside while contains CS
nll: 
curLine:  CS<0x557957cda710> calls function 'printf'
nextLine: Call graph node for function: 'main'<<0x557957c73cd0>>  #uses=1
start
uses = 0
cn:main
line:  CS<0x557957ccec68> calls function 'scope1'
inside while contains CS
nll:   CS<0x557957ccebf8> calls function 'scope2'
newpair2 = (scope1, scope2)
its new
newpair2 = (scope1, scope3)
its new
newpair2 = (scope1, scope4)
its new
newpair2 = (scope1, scope5)
its new
newpair2 = (scope1, scope6)
its new
newpair2 = (scope2, scope3)
its new
newpair2 = (scope2, scope4)
its new
newpair2 = (scope2, scope5)
its new
newpair2 = (scope2, scope6)
its new
newpair2 = (scope3, scope4)
its new
newpair2 = (scope3, scope5)
its new
newpair2 = (scope3, scope6)
its new
newpair2 = (scope4, scope5)
its new
newpair2 = (scope4, scope6)
its new
newpair2 = (scope5, scope6)
its new
curLine:  CS<0x557957ccec68> calls function 'scope1'
nextLine: Call graph node for function: 'printf'<<0x557957ce5400>>  #uses=5
start
uses = 4
cn:printf
line:  CS<0x0> calls external node
inside while contains CS
no ' :  CS<0x0> calls external node
start
uses = 2
cn:scope1
line:  CS<0x557957cce978> calls function 'A'
inside while contains CS
nll:   CS<0x557957cd8e78> calls function 'B'
newpair2 = (A, B)
its new
newpair2 = (A, C)
its new
newpair2 = (A, D)
its new
newpair2 = (B, C)
its new
newpair2 = (B, D)
its new
newpair2 = (C, D)
its new
curLine:  CS<0x557957cce978> calls function 'A'
nextLine: Call graph node for function: 'scope2'<<0x557957c73e10>>  #uses=2
start
uses = 1
cn:scope2
line:  CS<0x557957cd9198> calls function 'A'
inside while contains CS
nll:   CS<0x557957cd9238> calls function 'C'
newpair2 = (A, C)
its not new
newpair2 = (A, D)
its not new
newpair2 = (C, D)
its not new
curLine:  CS<0x557957cd9198> calls function 'A'
nextLine: Call graph node for function: 'scope3'<<0x557957c73da0>>  #uses=2
start
uses = 1
cn:scope3
line:  CS<0x557957cd9508> calls function 'A'
inside while contains CS
nll:   CS<0x557957cd9578> calls function 'B'
newpair2 = (A, B)
its not new
curLine:  CS<0x557957cd9508> calls function 'A'
nextLine: Call graph node for function: 'scope4'<<0x557957c73ec0>>  #uses=2
start
uses = 1
cn:scope4
line:  CS<0x557957cd9758> calls function 'B'
inside while contains CS
nll:   CS<0x557957cd97f8> calls function 'D'
newpair2 = (B, D)
its not new
newpair2 = (B, scope1)
its new
newpair2 = (D, scope1)
its new
curLine:  CS<0x557957cd9758> calls function 'B'
nextLine: Call graph node for function: 'scope5'<<0x557957c73f30>>  #uses=2
start
uses = 1
cn:scope5
line:  CS<0x557957cd9c18> calls function 'B'
inside while contains CS
nll:   CS<0x557957cd9cb8> calls function 'D'
newpair2 = (B, D)
its not new
newpair2 = (A, B)
its not new
newpair2 = (A, D)
its not new
curLine:  CS<0x557957cd9c18> calls function 'B'
nextLine: Call graph node for function: 'scope6'<<0x557957c73fa0>>  #uses=2
start
uses = 1
cn:scope6
line:  CS<0x557957cd9f38> calls function 'B'
inside while contains CS
nll:   CS<0x557957cd9fd8> calls function 'D'
newpair2 = (B, D)
its not new
curLine:  CS<0x557957cd9f38> calls function 'B'
into the for loop area
